@* Tuotteet-sivun rivinäkymä *@

@model IEnumerable<KalustoLuetteloSovellus.Models.Tuote>

@* Suodatin näkymä alkaa tästä *@

@{
    var currentSort = Context.Request.Query["sortOrder"].ToString();

    string NextSort(string col)
    {
        return currentSort == col ? col + "_desc" :
        currentSort == col + "_desc" ? col :
        col;
    }

    string SortIcon(string col)
    {
        if (currentSort == col) return " ▲";
        if (currentSort == col + "_desc") return " ▼";
        return "";
    }

}

<div class="d-flex gap-2 justify-content-center align-items-center">
    <p>Kaikki tuotteet: <strong>@ViewData["Kaikki"]</strong></p>
    <p>Näytetyt tuotteet: <strong>@ViewData["Suodatetut"]</strong></p>
</div>

@* Taulukkonäkymän tuoterivi osuus alkaa tästä *@

<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th title="Tapahtumat">Tapahtumat</th>
            <th title="Tuote ID"><a href="#" class="sort-link" data-sort="TuoteId">TuoteId @SortIcon("TuoteId")</a></th>
            <th title="Status"><a href="#" class="sort-link" data-sort="Status">Status @SortIcon("Status")</a></th>
            <th title="Tunnistenumero"><a href="#" class="sort-link" data-sort="IdNumero">TunnisteNro @SortIcon("IdNumero")</a></th>
            <th title="Kuva">Kuva</th>
            <th title="Kuvaus"><a href="#" class="sort-link" data-sort="Kuvaus">Kuvaus @SortIcon("Kuvaus")</a></th>
            <th title="Ostopäivämäärä"><a href="#" class="sort-link" data-sort="OstoPvm">OstoPvm @SortIcon("OstoPvm")</a></th>
            <th title="Hinta"><a href="#" class="sort-link" data-sort="Hinta">Hinta @SortIcon("Hinta")</a></th>
            <th title="Takuu"><a href="#" class="sort-link" data-sort="Takuu">Takuu @SortIcon("Takuu")</a></th>
            <th title="Kategoria"><a href="#" class="sort-link" data-sort="Kategoria">Kategoria @SortIcon("Kategoria")</a></th>
            <th title="Toimipiste"><a href="#" class="sort-link" data-sort="Toimipiste">Toimipiste @SortIcon("Toimipiste")</a></th>
            <th title="Aktiivinen"><a href="#" class="sort-link" data-sort="Aktiivinen">Aktiivinen @SortIcon("Aktiivinen")</a></th>
            <th title="Toiminnot"></th>
        </tr>
    </thead>

    @* Taulukkonäkymän tapahtumarivi osuus alkaa tästä *@

    <tbody>
        @foreach (var item in Model)
        {
            string imageSrc;
            if (item.Kuva != null && item.Kuva.Length > 0)
            {
                imageSrc = $"data:image/jpeg;base64,{Convert.ToBase64String(item.Kuva)}";
            }
            else
            {
                imageSrc = Url.Content("~/Images/OletusKuva.png");
            }

            <tr data-itemid="@item.TuoteId">
                <td><a data-orderid="@item.TuoteId" data-bs-toggle="collapse" href="#collapse_@item.TuoteId" aria-expanded="false"><i class="btn btn-main fas fa-list" style="color:black"></i></a></td>
                <td title="@item.TuoteId"><a class="nav-link" asp-action="Details" asp-controller="Tuotteet" asp-route-id="@item.TuoteId">@item.TuoteId</a></td>
                @* <td title="@item.TuoteId">@Html.DisplayFor(modelItem => item.TuoteId)</td> *@
                <td class="ms-auto">
                    @if (item.Aktiivinen == true)
                    {
                        @if (item.Status != null)
                        {
                            @await Html.PartialAsync("_StatusPartial", item.Status)
                        }
                    }
                    else
                    {
                        <i class="fas fa-circle-xmark"></i>
                    }
                </td>
                <td title="@item.IdNumero">@Html.DisplayFor(modelItem => item.IdNumero)</td>
                <td><img class="img-thumbnail" style="width:25px;height:25px;object-fit:cover" src="@imageSrc" alt="Tuote kuva" /></td>
                <td title="@item.Kuvaus">@Html.DisplayFor(modelItem => item.Kuvaus)</td>
                <td title="@item.OstoPvm">@Html.DisplayFor(modelItem => item.OstoPvm)</td>
                <td title="@item.Hinta">@Html.DisplayFor(modelItem => item.Hinta)</td>
                <td title="@item.Takuu">@Html.DisplayFor(modelItem => item.Takuu)</td>
                <td title="@item.Kategoria.KategoriaNimi">@if (item.Kategoria != null) @Html.DisplayFor(modelItem => item.Kategoria.KategoriaNimi) </td>
                <td title="@item.Toimipiste.KaupunkiJaToimipisteNimi">@if (item.Toimipiste != null) @Html.DisplayFor(modelItem => item.Toimipiste.ToimipisteNimi)</td>
                <td title="@item.Aktiivinen">@Html.DisplayFor(modelItem => item.Aktiivinen)</td>
                <td class="dropdown" style="overflow: visible;">
                    <button class="btn btn-main dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-bars me-2"></i></button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.TuoteId"><i class="fas fa-edit me-2"></i>Muokkaa</a></li>
                        <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.TuoteId"><i class="fas fa-search me-2"></i>Tiedot</a></li>
                        @if(KalustoLuetteloSovellus.RoleHelper.IsAdmin(Context))
                        {
                        <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.TuoteId"><i class="fas fa-trash me-2"></i>Poista</a></li>
                        }
                    </ul>
                </td>

            </tr>
            <tr>
                <td colspan="13">
                    <div id="collapse_@item.TuoteId" class="collapse"  aria-labelledby="heading_@item.TuoteId">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex flex-column">
                                    @{
                                        var isVarattu = item?.Status?.StatusNimi == "Varattu";
                                        var userIsOwner = item.ViimeisinTapahtuma != null && RoleHelper.IsUser(item.ViimeisinTapahtuma.KäyttäjäId, Context);
                                        var userIsAdmin = RoleHelper.IsAdmin(Context);
                                    }

                                    @if (isVarattu)
                                    {
                                        <div class="text-danger text-start w-100 mb-2">Tuote on varattu! Et voi luoda uutta tapahtumaa, ennen kuin tuote on "Vapaa"-tilassa!</div>
                                    }
                                    else
                                    {
                                        <div class="form-group text-start">
                                            <a class="btn btn-main btn-sm mt-2 mb-2" asp-controller="Tapahtumat" asp-action="Create" asp-route-tuoteId="@item.TuoteId"><i class="fas fa-calendar-check"></i> Luo tapahtuma</a>
                                        </div>
                                    }

                                    @if (isVarattu && (userIsOwner || userIsAdmin))
                                    {
                                        <div class="form-group text-start">
                                            <a class="btn btn-main btn-sm mt-2 mb-2" asp-controller="Tapahtumat" asp-action="Palauta" asp-route-tuoteId="@item.TuoteId"><i class="fas fa-handshake"></i> Palauta tuote</a>
                                        </div>
                                    }
                                </div>
                            </div>
                            <hr />
                            <p class="fw-bold"> Tuotteen @item.Kuvaus 10 viimeisintä tapahtumaa. Tuotteen kaikki tapahtumat: @item.Tapahtumat.Count() </p>
                                
                                
                            @await Html.PartialAsync("_TapahtumaRivitPartial",
                                        item.Tapahtumat.OrderByDescending(t => t.AloitusPvm).Take(10),
                                        new ViewDataDictionary(ViewData) { { "lajittelu", false } })
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
