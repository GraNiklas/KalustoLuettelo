@model IEnumerable<KalustoLuetteloSovellus.Models.Tuote>

@{
    ViewData["Title"] = "Index";

    int currentPage = (int)ViewData["CurrentPage"];
    int totalPages = (int)ViewData["TotalPages"];
    int pageSize = (int)ViewData["PageSize"];
}


<h1>Tuotteet</h1>

<p>
    <a class="btn btn-main" asp-action="Create"><i class="fa fa-plus-circle"></i> Lisää uusi</a>
</p>
<div class="d-flex gap-2">
    <p>Kaikki tuotteet: <strong>@ViewData["Kaikki"]</strong></p>
    <p>Näytetyt tuotteet: <strong>@ViewData["Suodatetut"]</strong></p>
</div>

<form method="get" class="d-flex gap-2 mb-4">

    <div class="form-group">
        <label>Kuvaus</label>
        <input type="text" name="kuvausHakusanalla" class="form-control" value="@(Context.Request.Query["kuvausHakusanalla"])" placeholder="Etsi kuvauksesta..." />
    </div>


    <div class="form-group">
        <label>Kategoria</label>
        <select name="kategoriaId" class="form-control" asp-items="ViewBag.Kategoriat">
            <option value="">Kaikki kategoriat</option>
        </select>
    </div>

    <div class="form-group">
        <label>Aktiivisuus</label>
        <select name="onAktiivinen" class="form-control" asp-items="ViewBag.Aktiiviset">
            <option value="">Kaikki tilat</option>
        </select>
    </div>
    
    <div class="form-group">
        <label>Toimipiste</label>
        <select name="toimipisteId" class="form-control" asp-items="ViewBag.Toimipisteet">
            <option value="">Kaikki Toimipisteet</option>
        </select>
    </div>

    <div class="form-group align-self-end">
        <button type="submit" class="btn btn-main"><i class="fas fa-filter"></i> Suodata</button>
    </div>
</form>

<div id="tuotteet-container">
    <p>Ladataan tuotteita...</p>
    <div class="skeleton-list">
        @for (int i = 0; i < 5; i++)
        {
            <div class="skeleton-item mb-3 p-3 rounded bg-light"></div>
        }
    </div>
</div>


<!-- Hidden totalPages value -->
<span id="totalPages" style="display:none;">@totalPages</span>

<!-- Pagination Buttons -->
<nav aria-label="Sivutus" class="mt-4">
    <ul class="pagination justify-content-start">
        <li class="page-item">
            <button class="page-link" id="prevPage">Edellinen</button>
        </li>

        @for (int i = 0; i < totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <button class="page-link page-number" data-page="@i">@(i + 1)</button>
            </li>
        }

        <li class="page-item">
            <button class="page-link" id="nextPage">Seuraava</button>
        </li>
    </ul>
</nav>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = parseInt(@ViewData["CurrentPage"]);
        const pageSize = @ViewData["PageSize"];
        const totalPages = @ViewData["TotalPages"];

        function loadPage(page) {
            fetch(`/Tuotteet/GetTuotteetPartial?pageSize=${pageSize}&currentPage=${page}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('tuotteet-container').innerHTML = html;
                    currentPage = page;
                    updatePagination();
                });
        }

        function updatePagination() {
            document.querySelectorAll('.page-item').forEach(el => el.classList.remove('active'));
            const pageButtons = document.querySelectorAll('.page-number');
            if (pageButtons[currentPage])
                pageButtons[currentPage].closest('li').classList.add('active');
        }

        document.querySelectorAll('.page-number').forEach(btn => {
            btn.addEventListener('click', () => {
                const page = parseInt(btn.getAttribute('data-page'));
                loadPage(page);
            });
        });

        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 0) loadPage(currentPage - 1);
        });

        document.getElementById('nextPage').addEventListener('click', () => {
            if (currentPage < totalPages - 1) loadPage(currentPage + 1);
        });

        // Load first page on initial load
        loadPage(currentPage);
    });
</script>
