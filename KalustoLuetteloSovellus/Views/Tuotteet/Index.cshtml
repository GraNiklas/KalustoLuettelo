@model IEnumerable<KalustoLuetteloSovellus.Models.Tuote>

@{
    ViewData["Title"] = "Index";
}


<h1>Tuotteet</h1>

<p>
    <a class="btn btn-main" asp-action="Create"><i class="fa fa-plus-circle"></i> Lisää uusi</a>
</p>
<div class="carousel-container">
    <button class="btn btn-sec" id="btnLeft" style="flex-grow:0;width:48px;height:48px;margin:auto"><i class="fas fa-arrow-left"></i></button>
    <div class="carousel-view">
        <div class="carousel-track" id="carouselTrack">
        @foreach (var item in Model)
        {
            @await Html.PartialAsync("_TuoteKorttiPartial", item)
        }
        </div>
    </div>
    <button class="btn btn-sec" id="btnRight" style="flex-grow:0;width:48px;height:48px;margin:auto"><i class="fas fa-arrow-right"></i></button>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdNumero)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Kuvaus) 
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Kuva)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OstoPvm)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hinta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Takuu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Aktiivinen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Kategoria)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Toimipiste)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IdNumero)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kuvaus)
            </td>
            <td>
                @if (item.Kuva != null && item.Kuva.Length > 0)
                {
                    <img class="" style="width:25px;height:25px;object-fit:cover" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Kuva)" alt="Tuote kuva" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OstoPvm)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hinta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Takuu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Aktiivinen)
            </td>
            <td>
                @if(item.Kategoria != null)@Html.DisplayFor(modelItem => item.Kategoria.KategoriaNimi)
            </td>
            <td>
                @if(item.Status != null)@Html.DisplayFor(modelItem => item.Status.StatusNimi)
            </td>
            <td>
                @if(item.Toimipiste != null)@Html.DisplayFor(modelItem => item.Toimipiste.ToimipisteNimi)
            </td>
            <td>
                <a class="btn btn-main" asp-action="Edit" asp-route-id="@item.TuoteId"><i class="fas fa-edit"></i></a>
                <a class="btn btn-main" asp-action="Details" asp-route-id="@item.TuoteId"><i class="fas fa-search"></i></a>
                <a class="btn btn-main" asp-action="Delete" asp-route-id="@item.TuoteId"><i class="fas fa-trash"></i></a>
            </td>
        </tr>
        }
    </tbody>

</table>



    <script type="text/javascript">
        // Karuselli koodi
        // document.body.classList.add('darkMode');
        window.onload = function(){

            const track = document.getElementById('carouselTrack');
            const btnLeft = document.getElementById('btnLeft');
            const btnRight = document.getElementById('btnRight');

            let currentIndex = 0;

            const items = document.querySelectorAll('.carousel-item');

            const totalItems = items.length;

            function updateCarousel() {
                // console.log(currentIndex)
                let itemWidth = 500
                const offset = currentIndex * itemWidth; // 500px item width * index
                track.style.transform = `translateX(-${offset}px)`;
            }
            function updateButtons(currentIndex) {
                if(currentIndex == 0)
                {
                    btnLeft.classList.add("disabled");
                }
                else
                {
                    btnLeft.classList.remove("disabled");
                }

                if(currentIndex == totalItems - 1)
                {
                    btnRight.classList.add("disabled");
                }
                else
                {
                    btnRight.classList.remove("disabled");
                }
            }

            updateButtons(currentIndex);

            btnRight.addEventListener('click', () => {
                if (currentIndex < totalItems) {
                currentIndex++;
                updateCarousel();
                updateButtons(currentIndex);
                }
            });

            btnLeft.addEventListener('click', () => {
                if (currentIndex > 0) {
                currentIndex--;
                updateCarousel();
                updateButtons(currentIndex);
                }
            });

        };

    </script>
